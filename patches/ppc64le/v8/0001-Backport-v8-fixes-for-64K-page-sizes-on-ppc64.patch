From c265a93d463414483a57962badc039431bb9a6b0 Mon Sep 17 00:00:00 2001
From: Shawn Anastasio <shawn@anastas.io>
Date: Sun, 11 Nov 2018 17:38:16 -0600
Subject: [PATCH] Backport v8 fixes for 64K page sizes on ppc64

---
 src/base/platform/platform-posix.cc | 4 ++--
 src/heap/store-buffer.cc            | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/base/platform/platform-posix.cc b/src/base/platform/platform-posix.cc
index cf7f3ec9bb..77ec37c750 100644
--- a/src/base/platform/platform-posix.cc
+++ b/src/base/platform/platform-posix.cc
@@ -251,8 +251,8 @@ void* OS::GetRandomMmapAddr() {
   // Big-endian Linux: 44 bits of virtual addressing.
   raw_addr &= uint64_t{0x03FFFFFFF000};
 #else
-  // Little-endian Linux: 48 bits of virtual addressing.
-  raw_addr &= uint64_t{0x3FFFFFFFF000};
+  // Little-endian Linux: 46 bits of virtual addressing.
+  raw_addr &= uint64_t{0x3FFFFFFF0000};
 #endif
 #elif V8_TARGET_ARCH_MIPS64
   // We allocate code in 256 MB aligned segments because of optimizations using
diff --git a/src/heap/store-buffer.cc b/src/heap/store-buffer.cc
index d73e3235c1..e6e47ee4d9 100644
--- a/src/heap/store-buffer.cc
+++ b/src/heap/store-buffer.cc
@@ -56,7 +56,7 @@ void StoreBuffer::SetUp() {
   }
 
   if (!reservation.SetPermissions(reinterpret_cast<Address>(start_[0]),
-                                  kStoreBufferSize * kStoreBuffers,
+                                  RoundUp(kStoreBufferSize * kStoreBuffers, CommitPageSize()),
                                   PageAllocator::kReadWrite)) {
     heap_->FatalProcessOutOfMemory("StoreBuffer::SetUp");
   }
-- 
2.19.1

